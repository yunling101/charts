{{- $redis := .Values.persistence.persistentVolumeClaim.redis -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.name }}-redis
  labels:
{{ include "yonecloud.labels" . | indent 4 }}
    app: redis
spec:
  replicas: 1
  serviceName: {{ .Values.name }}-redis-{{ .Values.serviceSuffix }}
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: {{ .Values.redis.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command:
            - "sh"
            - "-c"
            - "redis-server /usr/local/etc/redis/redis.conf"
          ports:
            - containerPort: 6379
          readinessProbe:
            initialDelaySeconds: 5
            tcpSocket:
              port: 6379
            periodSeconds: 10
            timeoutSeconds: 3
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /usr/local/etc/redis/redis.conf
              subPath: redis.conf
      volumes:
      {{- if not .Values.persistence.enabled }}
      - name: data
        emptyDir: {}
      {{- else if $redis.existingClaim }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ $redis.existingClaim }}
      {{- end }}
      - name: config
        configMap:
          name: redis-config
  {{- if and .Values.persistence.enabled (not $redis.existingClaim) }}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
{{ include "yonecloud.legacy.labels" . | indent 8 }}
    spec:
      accessModes:
        - {{ $redis.accessMode | quote }}
      {{- if $redis.storageClass }}
      {{- if (eq "-" $redis.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ $redis.storageClass }}"
      {{- end }}
      {{- end }}
      resources:
        requests:
          storage: {{ $redis.size | quote }}
  {{- end }}